#!/bin/bash

#
## Debian post-install script [netinst-nonfree-testing as base] 
## Gonna want to run these one at a time, or not
## Comment/edit grub lines if you need grub
## Comment/edit Multimedia fstab lines
## Should be run as root, might be fixed, must be sudo at least
## Maybe I'll fix it up so all of it can run as user


#
## Sources
#
## Recreate Debian TESTING repo sources.list with old stable backports
sudo echo '#
deb [arch=amd64,i386] https://deb.debian.org/debian/ testing main contrib non-free
deb-src [arch=amd64,i386] https://deb.debian.org/debian/ testing main contrib non-free
deb [arch=amd64,i386] https://deb.debian.org/debian/ testing-updates main contrib non-free
deb-src [arch=amd64,i386] https://deb.debian.org/debian/ testing-updates main contrib non-free
deb [arch=amd64,i386] https://security.debian.org/debian-security testing-security main contrib non-free
deb-src [arch=amd64,i386] https://security.debian.org/debian-security testing-security main contrib non-free
deb [arch=amd64,i386] https://deb.debian.org/debian/ stable main contrib non-free
deb-src [arch=amd64,i386] https://deb.debian.org/debian/ stable main contrib non-free
deb [arch=amd64,i386] https://deb.debian.org/debian/ oldstable main contrib non-free
deb-src [arch=amd64,i386] https://deb.debian.org/debian/ oldstable main contrib non-free
' > /etc/apt/sources.list
#
## Add x86 to sources
sudo dpkg --add-architecture i386
#
## Update apt sources cache
sudo apt update


#
## Misc
#
## Uninstall GRUB due to NVRAM bug
## I use rEFInd for all my booting needs anyway
sudo apt purge grub* -y
sudo rm -r /boot/grub
#
## Mount and add multimedia storage to fstab
sudo mkdir /media/Multimedia-Z
sudo mount 'LABEL=Multimedia-Z' /media/Multimedia-Z
sudo echo '
LABEL=Multimedia-Z /media/Multimedia-Z ntfs
' >> /etc/fstab
#
## Forcefully lower swap usage
sudo echo '
vm.swappiness = 10
' >> /etc/sysctl.conf


#
## SOFTWARES
#
## Firmwares
apt install --install-recommends -y firmware-linux-nonfree firmware-iwlwifi firmware-realtek linux-headers-amd64 bluez-firmware pulseaudio dkms llvm mono-runtime apt-transport-https dnsmasq resolvconf tlp p7zip rar unrar cabextract btrfs-tools mono-complete cups sane hplip printer-driver-all openjdk-11-jre openjdk-17-jre inkscape sassc optipng
#
## Firmwares new
apt install --install-recommends -y firmware-linux-nonfree firmware-iwlwifi linux-headers-amd64 bluez-firmware dkms llvm gcc-multilib mono-complete apt-transport-https dnsmasq resolvconf tlp p7zip-rar cabextract hplip printer-driver-all inkscape sassc optipng
#
## System Utilities
apt install --install-recommends -y blueman gufw lynis tiger gparted cpupower-gui alacarte mugshot neofetch lynx cmus hexedit wmctrl xcalib gpick
#
## Development Packages
apt install --install-recommends -y libtool clang git libcurl4-openssl-dev libjansson-dev libssl-dev libgmp-dev zlib1g-dev libncurses5-dev bison flex maven default-jdk gh
#
## Install programs
apt install --install-recommends -y gimp proxychains tor steam lutris mangohud mangoctl vlc clementine filezilla virt-manager handbrake soundconverter transmission catfish
#
## Install 32 bit libs and vulkan libs
apt --install-recommends -y install lib32z1 libidn11:i386 libxmu6:i386 libpangox-1.0-0:i386 libpangoxft-1.0-0:i386 libglx-mesa0:i386 mesa-vulkan-drivers:i386 mesa-vulkan-drivers libgl1-mesa-dri:i386 libgtk2.0-0:i386 libopenal1:i386 libxtst6:i386 vulkan-validationlayers vulkan-tools vulkan-utils mesa-opencl-icd intel-opencl-icd
#
## Install Nvidia driver and CUDA
#apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/GPGKEY
systemctl stop lightdm
apt install nvidia-driver nvidia-cuda-dev nvidia-cuda-toolkit -y
#
## Install Razer driver and Polychromatic
apt install openrazer-meta -y
echo "deb [arch=amd64,i386] http://ppa.launchpad.net/polychromatic/testing/ubuntu focal main" > /etc/apt/sources.list.d/polychromatic.list
apt-key adv --recv-key --keyserver keyserver.ubuntu.com 96B9CD7C22E2C8C5
apt update
apt install --install-recommends -y polychromatic
#
## Install Logitech Stuff
echo "deb [arch=amd64,i386] https://ppa.launchpadcontent.net/vivnet/g510s/ubuntu impish main 
deb-src https://ppa.launchpadcontent.net/vivnet/g510s/ubuntu impish main
" > /etc/apt/sources.list.d/polychromatic.list
apt-key adv --recv-key --keyserver keyserver.ubuntu.com 0x0403E3A5DADCB078BED6D51E3E7E6997B4C491B3
apt update
apt install --install-recommends -y g510s g15stats
#
## Install secondary 32 bit libs (OUTDATED-CRASH) cba to find the culprit
#apt install libxtst6:i386 libxrandr2:i386 libglib2.0-0:i386 libgtk2.0-0:i386 libpulse0:i386 libgdk-pixbuf2.0-0:i386 libcurl4-openssl-dev:i386 libopenal1:i386 libusb-1.0-0:i386 libdbus-glib-1-2:i386 -y 
#apt install libxtst6:i386 libxrandr2:i386 libglib2.0-0:i386 libgtk2.0-0:i386 libpulse0:i386 libgdk-pixbuf2.0-0:i386 libcurl4-openssl-dev:i386 libopenal1:i386 libusb-1.0-0:i386 libdbus-glib-1-2:i386 libnm-glib4:i386 libnm-util2:i386 -y
#
## Build dependencies (OUTDATED-POINTLESS)
#sudo apt build-dep firmware-linux-nonfree linux-headers-amd64 libglx-mesa0:i386 vulkan-tools vulkan-validationlayers -y
#
## Download and install Discord cause the normal way (using dpkg on .deb) is broken or something
## Also can be used to update Discord
mkdir ~/Downloads/discordinstall ;
wget -O ~/Downloads/discordinstall/discordinstall.deb 'https://discord.com/api/download?platform=linux&format=deb' ;
xarchiver --extract-to ~/Downloads/discordinstall/ ~/Downloads/discordinstall/discordinstall.deb ;
xarchiver --extract-to / ~/Downloads/discordinstall/data.tar.gz ;
rm -r ~/Downloads/discordinstall ;
#
## Install WINE-STAGING
wget -qO- 'https://dl.winehq.org/wine-builds/winehq.key' | tee /etc/apt/trusted.gpg.d/winehq.asc
echo '#
deb [arch=amd64,i386] https://dl.winehq.org/wine-builds/debian/ testing main
' > /etc/apt/sources.list.d/winehq.list
apt update
apt install --install-recommends -y winehq-staging winetricks
#
## Install .NET
wget -qO- 'https://packages.microsoft.com/keys/microsoft.asc' | tee /etc/apt/trusted.gpg.d/microsoft.asc
sudo wget https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb -O ~/Downloads/packages-microsoft-prod.deb
sudo dpkg -i ~/Downloads/packages-microsoft-prod.deb
sudo rm ~/Downloads/packages-microsoft-prod.deb
sudo apt install --install-recommends -y aspnetcore-runtime-5.0
sudo apt install --install-recommends -y aspnetcore-runtime-6.0
#
## Install RUNESCAPE
wget -qO- 'https://content.runescape.com/downloads/ubuntu/runescape.gpg.key' | tee /etc/apt/trusted.gpg.d/runescape.asc
echo '#
deb [arch=amd64,i386] https://content.runescape.com/downloads/ubuntu trusty non-free
' > /etc/apt/sources.list.d/runescape.list
apt update
apt install --install-recommends -y runescape-launcher
#
## Install VIRTUALBOX
wget -qO- 'https://www.virtualbox.org/download/oracle_vbox_2016.asc' | tee /etc/apt/trusted.gpg.d/vbox.asc
echo '#
deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian buster contrib
' > /etc/apt/sources.list.d/virtualbox.list
apt update
apt install --install-recommends -y virtualbox-6.1 -y
wget -O ~/Downloads/vbox-ext-pack.vbox-extpack 'https://download.virtualbox.org/virtualbox/6.1.32/Oracle_VM_VirtualBox_Extension_Pack-6.1.32.vbox-extpack'
wget -O ~/Downloads/vbox-guest-additions.iso 'https://download.virtualbox.org/virtualbox/6.1.32/VBoxGuestAdditions_6.1.32.iso'
wget -O ~/Downloads/vbox-guest-additions.deb 'https://download.virtualbox.org/virtualbox/6.1.32/virtualbox-6.1_6.1.32-149290~Debian~buster_amd64.deb'
dpkg -i ~/Downloads/vbox-guest-additions.deb
#
## Install Google Earth Pro
wget -O ~/Downloads/earth-pro.deb 'https://dl.google.com/dl/earth/client/current/google-earth-pro-stable_current_amd64.deb'
dpkg -i ~/Downloads/earth-pro.deb
rm ~/Downloads/earth-pro.deb
#
## Install SNAP
echo 'PATH="$PATH:/snap/bin"' >> ~/.bashrc
apt install --install-recommends -y snapd
snap install core
snap install snap-store
